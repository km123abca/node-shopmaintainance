
[x] npm init -y to start the project (server)
[x] npm install --save express
[x] create a server.js in root and get it to listen on 3000
[x] create an app.js in root to put inside http.createServer() in server.js
[x] npm install --save--dev nodemon and "start":"nodemon server.js" inside package.json
[x] npm install --save morgan
[x] make 'public' folder static app.use(express.static(path.join(__dirname, 'public')));
[x] Create a routes folder and set up the appropriate routes and export the router which can be used at app.js
[x] Install Handlebars npm install --save express-handlebars
[x] set up handlebars as view engine inside app.js
     app.engine('.hbs',expressHbs({defaultLayout:'Layout',extname:'.hbs'}));
     app.set('view engine', '.hbs');
[x] Create views, views/layouts/layout.hbs
[x] npm install --save mongoose
[x] npm install --save multer , for image uploading
[x] create a new mongodb project in our atlas page
    email: johnymcoy5@gmail.com  password: alexanderdobrev1@
    mongoadmin:kitchu pass:sonja
   mongo "mongodb+srv://cluster0-uyi0w.mongodb.net/node-billing-inventory" --username kitchu
   pivoted and decided to use
   mongo "mongodb+srv://node-rest-shop-cqnpt.mongodb.net/test"  --username kitchuadmin

[x] npm install --save body-parser  for parsing body of a request    eg: req.body.productId
[x] create nodemon.json at the root to store process.env. variables like mongodb password
   process.env.MONGO_ATLAS_PW
[x] create inventory.js, Sales.js and Bills.js inside the models folder.
[x]construct the inventory page with functionality to display and add inventory
[] create set up to delete inventory items
[x] create a billing pane in the sales page and create a numpad. Add functionality
[x] create set up so that sold numberes get auto reducted from inventory count
[x] Sales Report and Bill Summary Page
[x] Print Bill Page
[x] A loading Widget
[] Filter bills based on date, cashier, Total Amt.
[x] npm install --save bcrypt  for encrypting passwords
[] create a login logout system based on express sessions
    npm install --save express-session
[] install mongostore so that session variables may be stored in mongodb
[] Create a register.hbs and login.hbs and approprate routes

